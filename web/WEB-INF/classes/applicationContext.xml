<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入外部属性文件=============================== -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 配置C3P0连接池=============================== -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Hibernate的相关属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

        <!-- 引入映射文件 -->
        <property name="mappingResources">
            <list>
                <value>cn/shinhwa/crm/domain/User.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!--配置action-->
    <bean id="userAction" class="cn.shinhwa.crm.web.action.UserAction">
        <property name="userService" ref="userService">
        </property>
    </bean>
    <!--配置Service-->
    <bean id="userService" class="cn.shinhwa.crm.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao">
        </property>
    </bean>
    <!--配置Dao-->
    <bean id="userDao" class="cn.shinhwa.crm.dao.impl.UserDaoImpl" >
        <property name="sessionFactory" ref="sessionFactory">

        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 所有find开头的方法为只读，所有查询方法都以find开头 -->
            <tx:method name="find*" read-only="true" />
            <!-- 其余方法如果没有事务的时候，就开启新事务运行该方法，否则使用已有的事务运行该方法 -->
            <!-- 关闭read-only保证save*,update*,delete*等方法可以修改数据 -->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 设置com.sx.dao包下及其子包下的类的所有方法都加上txAdvice事务通知切片（主要用于自动实现Hibernate事务的提交回滚等） -->
    <aop:config>
        <aop:pointcut id="DaoPointCut" expression="execution(* cn.shinhwa.crm.dao..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="DaoPointCut"/>
    </aop:config>

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
